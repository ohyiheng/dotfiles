# --------- Environment variables --------- #
# For zoxide
export PATH=$PATH:$HOME/.local/bin:$HOME/bin

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ------------ Zinit's installer ------------
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
# --------- End of Zinit's installer --------- #


# ----------- Powerlevel10k Prompt ----------- #
zinit ice depth=1; zinit light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


# --------- Load Plugins using Zinit --------- #
autoload -U compinit; compinit # idk what this does but it's needed for fzf-tab
zinit light Aloxaf/fzf-tab
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-syntax-highlighting


# --------------- Init zoxide --------------- #
if [[ ! -f $HOME/.local/bin/zoxide ]]; then
    echo "Installing zoxide...\n"
    curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
else
    eval "$(zoxide init zsh)"
fi


# --------------- Install fzf --------------- #
if [ ! -e $HOME/.fzf/bin/fzf ]; then
  echo "\nfzf not found, installing...\n"
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install --no-bash --no-fish --no-zsh
fi
export PATH=$PATH:$HOME/.fzf/bin
source <(fzf --zsh)


# -------------- Set up Atuin -------------- #
zinit ice as"command" from"gh-r" bpick"atuin-*.tar.gz" mv"atuin*/atuin -> atuin" \
    atclone"./atuin init zsh > init.zsh; ./atuin gen-completions --shell zsh > _atuin" \
    atpull"%atclone" src"init.zsh"
zinit light atuinsh/atuin

# ---------------- Aliases ---------------- #
alias cd=z
if command -v batcat > /dev/null 2>&1; then
  alias bat=batcat
fi
alias lh="ls -alh"
alias creload="docker exec -w /etc/caddy caddy caddy reload"
alias tag=onetagger
alias dot=chezmoi


# -------------- Keybindings -------------- #
bindkey '^[[1;5C' forward-word
bindkey '^[[1;5D' backward-word
bindkey "^U"      backward-kill-line
bindkey '^H'      backward-kill-word


# --------- Configure history file --------- #
HISTSIZE=5000
SAVEHIST=$HISTSIZE
HISTFILE=~/.zsh_history
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space


# -------------- Add SSH Key -------------- #
clear
eval $(ssh-agent)
ssh-add $HOME/.ssh/id_ed25519


# ---------------- Welcome ---------------- #
clear
echo "\nWelcome to $HOST!"
if [ -e /usr/bin/fastfetch ]; then
  echo "\n"
  fastfetch
else
  echo "\nInstall fastfetch to view system info."
fi
if ! command -v bat > /dev/null 2>&1; then
  echo "\nInstall bat because it's better than cat."
fi
